{"version":3,"sources":["actions/index.js","actions/actionsType.js","api/index.js","components/Item.jsx","context/PopupContext.js","components/BtnPopup.jsx","components/Input.jsx","components/AddTask.jsx","pages/List.jsx","pages/Task.jsx","router.js","components/Loader.jsx","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["fetchTodos","items","type","payload","addTodo","id","title","editTodo","showLoader","removeTodo","client","axios","create","baseURL","get","then","data","clientData","post","deleteTodo","delete","Item","props","dispatch","useDispatch","className","href","onClick","api","React","createContext","BtnPopup","useState","isShowPopup","setIsShowPopup","closePopup","popup","cn","modifier","btnText","PopupContext","Provider","value","children","Input","initValue","setValue","isInvalid","setIsInvalid","required","disabled","htmlFor","label","onInvalid","e","preventDefault","onChange","target","style","String","length","AddTask","useContext","setTitle","onSubmit","List","useSelector","state","map","item","key","createButton","isChangeTitle","Task","navigate","maxWidth","find","loading","role","viewBox","cx","cy","r","fill","strokeWidth","Loader","isLoading","App","useEffect","routeResult","useRoutes","routes","Boolean","window","location","hostname","match","initialState","handlers","filter","store","createStore","action","DEFAULT","undefined","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec6faed3.chunk.js","sourcesContent":["import {ADD_TODO, EDIT_TODO, FETCH_TODOS, REMOVE_TODO,  SHOW_LOADER} from '../actions/actionsType'\n\n\nexport const fetchTodos = (items) => {\n  return {\n    type: FETCH_TODOS,\n    payload: items\n  }\n}\n\nexport const addTodo = (id, title) => {\n  return {\n    type: ADD_TODO,\n    payload: {\n      id,\n      title\n    }\n  }\n}\n\nexport const editTodo = (id, title) => {\n  return {\n    type: EDIT_TODO,\n    payload: {\n      id,\n      title\n    }\n  }\n}\n\nexport const showLoader = () => {\n  return {\n    type: SHOW_LOADER,\n    payload: {},\n  }\n}\n\nexport const removeTodo = (id) => {\n  return {\n    type: REMOVE_TODO,\n    payload: {\n      id\n    }\n  }\n}","export const ADD_TODO = 'ADD_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const FETCH_TODOS = 'FETCH_TODOS'\nexport const REMOVE_TODO = 'REMOVE_TODO'\nexport const SHOW_LOADER = 'SHOW_LOADER'\n","import axios from \"axios\";\n\nconst client = axios.create({\n  baseURL: 'https://test.megapolis-it.ru/api/list'\n});\n\n\nexport default {\n  fetchTodos() {\n    return client.get(``)\n    .then(({data}) => ({items: data.data}))\n  },\n  addTodo(clientData) {\n    return client.post(``, clientData)\n    .then(({data}) => data)\n  },\n  editTodo(id, clientData) {\n    return client.post(`${id}`, clientData)\n  },\n  deleteTodo(id) {\n    return client.delete(`${id}`)\n  },\n}","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {removeTodo, showLoader} from '../actions/'\nimport {A} from 'hookrouter';\nimport api from \"../api\";\n\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport default function Item(props) {\n\n  const dispatch = useDispatch();\n\n  function handleOnClick() {\n    dispatch(showLoader())\n    api.deleteTodo(props.id)\n    .then(() => {\n      dispatch(removeTodo(props.id));\n    });\n  }\n\n  return (\n      <div className=\"todo-item\">\n        <div className=\"todo-item__id\"><span>Задача</span> №{props.id}</div>\n        <div className=\"todo-item__title\">{props.title}</div>\n        <div className=\"todo-item__control\">\n          <A href={`/${props.id}`} className=\"todo-item__edit\">\n            <span className=\"i-edit\"></span>\n          </A>\n          <button type=\"button\" className=\"todo-item__remove\"\n                  onClick={handleOnClick}\n          >\n            <span className=\"i-remove\"></span>\n          </button>\n        </div>\n      </div>\n  );\n}","import React from 'react';\n\n/**\n * Create and initialize a context for the Layout component\n */\nexport default React.createContext({\n  data: null,\n});","import React,{useState} from 'react';\nimport cn from 'classnames';\nimport PopupContext from '../context/PopupContext';\n\nexport default function BtnPopup(props) {\n\n  const [isShowPopup, setIsShowPopup] = useState(false);\n\n  function showPopup() {\n    setIsShowPopup(true)\n  }\n  function closePopup() {\n    setIsShowPopup(false)\n  }\n\n  const popup = {closePopup};\n\n  return ( <div className={cn('popup', props.modifier)}>\n    <button type=\"button\"\n            className=\"btn ml-auto\"\n            onClick={showPopup}\n\n    >{props.btnText}</button>\n    {isShowPopup &&\n    <div className=\"popup__body\">\n      <div className=\"popup__overlay\"\n        onClick={closePopup}\n      ></div>\n      <div className=\"popup__inner\">\n        <div className=\"popup__content\">\n          <PopupContext.Provider value={{ popup }}>\n            {props.children}\n          </PopupContext.Provider>\n        </div>\n        <button type=\"button\" className=\"popup__close\"\n                onClick={closePopup}\n        >\n          <span className=\"i-close\"></span>\n        </button>\n      </div>\n    </div>\n    }\n  </div>)\n\n}","import React, {useState} from 'react';\nimport cn from 'classnames';\n\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport default function Input(props) {\n  const [value, setValue] = useState(props.initValue || '');\n  const [isInvalid, setIsInvalid] = useState(false);\n\n  function handleInvalid(e) {\n    e.preventDefault();\n    setIsInvalid(true)\n  }\n\n  function handleOnChange(e) {\n    props.onChange(e.target.value);\n    setValue(e.target.value)\n  }\n\n  return (\n      <div className={cn('form-group', props.className,\n          {\n            'required': props.required,\n            'disabled': props.disabled,\n          })}\n      >\n        <label htmlFor={props.id}\n               className=\"control-label\">{props.label}</label>\n        <input type=\"text\"\n               className=\"form-control\"\n               onInvalid={handleInvalid}\n               onChange={handleOnChange}\n               value={value}\n               required={props.required}\n               style={props.style}\n        />\n        {(isInvalid && String(value).length === 0) &&\n        <span className=\"invalid-feedback\">Поле «{props.label}» не может быть пустым</span>\n        }\n      </div>\n  );\n\n}","import React, {useState} from 'react';\nimport Input from './Input'\nimport {useDispatch} from 'react-redux'\nimport api from '../api/'\nimport {addTodo} from '../actions/'\nimport PopupContext from '../context/PopupContext';\n\nexport default function AddTask() {\n\n  const { popup } = React.useContext(PopupContext);\n  const [title, setTitle] = useState('');\n  const dispatch = useDispatch();\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    api.addTodo({title})\n    .then(({id}) => {\n      dispatch(addTodo(id, title));\n      popup.closePopup();\n    });\n  }\n\n  return (<form onSubmit={handleOnSubmit}>\n    <Input\n        label=\"Краткое описание\"\n        initValue={title}\n        onChange={setTitle}\n        id=\"add_task\"\n        required={true}\n    />\n    <div className=\"d-flex\">\n      <button type=\"submit\" className=\"btn ml-auto\">Создать</button>\n    </div>\n  </form>)\n\n}","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport Item from '../components/Item';\nimport BtnPopup from \"../components/BtnPopup\";\nimport AddTask from \"../components/AddTask\";\n\n function List() {\n  const items = useSelector(state => state.items)\n\n  return (\n    <>\n      <div className=\"d-flex mb-4\">\n        <h1 className=\"m-0\">Список задач</h1>\n        <BtnPopup btnText=\"Добавить\" modifier=\"popup--add-task\">\n          <AddTask />\n        </BtnPopup>\n      </div>\n      <div className=\"list\">\n        {items.map(item => {\n          return <Item {...item} key={item.id} />\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default List;","import React, {useState} from 'react';\nimport Input from '../components/Input'\nimport {editTodo, removeTodo, showLoader} from '../actions/'\nimport {useDispatch} from \"react-redux\";\nimport {navigate, A} from 'hookrouter';\nimport api from '../api/'\n\nconst createButton = (isChangeTitle) => {\n  return isChangeTitle ? (\n      <A href=\"/\" className=\"btn btn-info\">\n        Вернуться к списку\n      </A>\n  ) : (\n      <button type=\"submit\" className=\"btn\">\n        Сохранить\n      </button>\n  )\n}\n\nexport default function Task(props) {\n\n  const [title, setTitle] = useState(props.title);\n  const dispatch = useDispatch();\n\n  function handleOnClick() {\n    dispatch(showLoader())\n    api.deleteTodo(props.id)\n    .then(() => {\n      dispatch(removeTodo(props.id));\n    });\n  }\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    dispatch(showLoader())\n\n    api.editTodo(props.id, {title})\n    .then(() => {\n      dispatch(editTodo(props.id, title))\n      navigate('/')\n    });\n  }\n\n  return (\n\n      <form onSubmit={handleOnSubmit}>\n        <div className=\"d-flex mb-4\">\n          <h1>Задача №{props.id}</h1>\n          <button type=\"button\"\n                  className=\"btn btn-danger ml-auto\"\n                  onClick={handleOnClick}\n          >\n            Удалить\n          </button>\n        </div>\n        <Input\n            onChange={setTitle}\n            label=\"Краткое описание\"\n            initValue={title}\n            style={{maxWidth: '400px'}}\n            required={true}\n        />\n        {createButton(title === props.title)}\n      </form>\n  );\n}","import React from \"react\";\nimport List from \"./pages/List\";\nimport Item from \"./pages/Task\";\n\nexport default items => {\n  return {\n    '/': () => <List/>,\n    '/:id': ({id}) => {\n      const item = items.find(item => +item.id === +id);\n      return item ? <Item id={+id} title={item.title}/> : null\n    }\n  }\n};","import React from 'react';\nimport cn from 'classnames';\nimport {useSelector} from \"react-redux\";\n\nconst loading = (<div className=\"loader-waiting\">\n  <div className=\"loader\" role=\"progressbar\">\n    <svg viewBox='22 22 44 44'>\n      <circle className=\"circle\" cx='44' cy='44' r='20.2' fill='none'\n              strokeWidth='3.6'/>\n    </svg>\n  </div>\n</div>);\n\nexport default function Loader(props) {\n\n  const isLoading = useSelector(state => state.isLoading);\n\n  return <div className={cn({\n    'loader-wrapper': isLoading\n  })}>{props.children}\n    {isLoading && loading}\n  </div>\n\n}\n","import React, {useEffect} from 'react';\nimport {useRoutes, navigate} from 'hookrouter';\nimport routes from \"./router\";\nimport Loader from \"./components/Loader\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport api from './api'\nimport {fetchTodos} from './actions'\n\nfunction App() {\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.items)\n\n  useEffect(() => {\n    api.fetchTodos()\n    .then( data => {\n      dispatch(fetchTodos(data.items))\n    })\n  }, [dispatch]);\n\n  const routeResult = useRoutes(routes(items));\n\n  return (\n    <div className=\"App\">\n      <Loader>\n        <main className=\"all\">\n          {items.length > 0 &&\n          <div className=\"container\">\n            {routeResult || navigate('/')}\n          </div>\n          }\n        </main>\n      </Loader>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_TODO, EDIT_TODO, FETCH_TODOS, REMOVE_TODO,  SHOW_LOADER} from '../actions/actionsType'\n\nconst initialState = {\n  items: [],\n  isLoading: true\n};\n\nconst handlers = {\n  [SHOW_LOADER]: state => ({...state, isLoading: true}),\n  [ADD_TODO]: (state, {payload}) => ({\n    ...state,\n    items: [...state.items, payload]\n  }),\n  [EDIT_TODO]: (state, {payload}) => ({\n    ...state,\n    isLoading: false,\n    items: state.items.map(item => {\n      return item.id === payload.id ? {title: payload.title, id: payload.id}\n          : item\n    })\n  }),\n  [FETCH_TODOS]: (state, {payload}) => ({...state, items: payload, isLoading: false}),\n  [REMOVE_TODO]: (state, {payload}) => ({\n    ...state,\n    isLoading: false,\n    items: state.items.filter(item => payload.id !== item.id)\n  }),\n  DEFAULT: state => state\n}\n\nexport default function (state, action) {\n  const handle = handlers[action.type] || handlers.DEFAULT\n  return handle(state  === undefined ? initialState: state, action)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport todoApp from './reducers'\n\nconst store = createStore(todoApp, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}